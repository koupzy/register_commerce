<?php
namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\DateTimeType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormEvent;
use Symfony\Component\Form\FormEvents;
use Symfony\Component\OptionsResolver\OptionsResolver;

/**
 * Created by PhpStorm.
 * User: root
 * Date: 19/01/19
 * Time: 17:16
 */
class ExploitantType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder->add('nom', TextType::class)
            ->add('prenom', TextType::class)
            ->add('nationalite', ChoiceType::class, [
                    'choices' => [
                        'Afhgan' => 'afhgan',
                        'Burkinabé' => 'burkinabe',
                        'Ivoirienne' => 'ivoirienne'
                    ],

            ])->add('situationMatri', ChoiceType::class, [
                    'choices' => [
                        'celibataire' => 'celibataire',
                        'marie' => 'marie',
                        'divorce' => 'divorce'
                    ],

            ])
            ->add('domicile', TextType::class)
            ->add('lieuNaiss', TextType::class)
            ->add('dateNaiss', DateType::class, [
                'label' => 'Date de Naissance',
                'widget' => 'choice',
                'html5' => false,
                'placeholder' => [
                    'year' => 'Année', 'month' => 'Mois', 'day' => 'jour'
                ]
            ])
            ->add('nomConjoint', TextType::class,[
                'label' => 'Nom',
                'property_path' => 'conjoints[nom]'
            ])->add('prenomConjoint', TextType::class,[
                'label' => 'Prenom',
                'property_path' => 'conjoints[prenom]'
            ])->add('regimeMatConjoint', TextType::class,[
                'label' => 'Regime Matrimoniale',
                'property_path' => 'conjoints[regimeMat]'
            ])->add('clauseRestConjoint', TextType::class,[
                'label' => 'Clause restrictive',
                'property_path' => 'conjoints[clauseRest]'
            ])->add('dateNaissConjoint', DateType::class,[
                'label' => 'Date de naissance',
                'placeholder' => [
                    'year' => 'Année', 'month' => 'Mois', 'day' => 'Jour'
                ],
                'property_path' => 'conjoints[dateNaiss]'
            ])
            ->add('periode_deAnt', DateType::class , [
                'label' => 'Periode de',
                'placeholder' => [
                    'year' => 'Année', 'month' => 'Mois', 'day' => 'Jour'
                ],
                'property_path' => 'antActivities[periode_de]'
            ])->add('periode_aAnt', DateType::class , [
                'label' => 'Periode a',
                'placeholder' => [
                    'year' => 'Année', 'month' => 'Mois', 'day' => 'Jour'
                ],
                'property_path' => 'antActivities[periode_a]'
            ])->add('prec_rccmAnt', TextType::class , [
                'label' => 'Precedent RCCM',
                'property_path' => 'antActivities[prec_rccm]'
            ])->add('activiteAnt', TextType::class , [
                'label' => 'Activité',
                'property_path' => 'antActivities[activite]'
            ])->add('princip_etabAnt', TextType::class , [
                'label' => 'Principale établissement',
                'property_path' => 'antActivities[princip_etab]'
            ])->add('second_etabAnt', TextType::class , [
                'label' => 'Principale seconde',
                'property_path' => 'antActivities[second_etab]'
            ])->add('rccmAnt', TextType::class , [
                'label' => 'RCCM',
                'property_path' => 'antActivities[rccm]'
            ])->add('titreSejour', TextType::class,[
                'required' => false
            ])
            ->add('dateValidite', DateType::class, [
                'required' => false,
                'html5'  => false,
                'widget' => 'choice',
                'placeholder' => [
                    'year' => 'Année', 'month' => 'Mois', 'day' => 'jour'
                ]
            ]);;

    }

    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults([
            'data_class' => 'AppBundle\Entity\Exploitant',
            'csrf_protection' => true
        ]);
    }


}